/* 1.
Find maximum sum of a Subarray of Size K (https://webrewrite.com). 
Given an array of positive number and positive number 'k'. find the maximum
sum of subarray of size 'k'

arr = {2,1,5,1,3,2}, k=3
output: 9, 
the subarray is (5,1,3)  */----------> maximum sum is 9

Answer:- 
public static void main (String[] args){
  int[] arr = {2,1,5,1,3,2};int k = 3;
  
  int result = getSum(arr, k);
  System.out.println(result);
  
  }
  public static int getSum(int arr[], int k){
      int start=0;
      int sum=0;
      int maxSum=0;
      for(int end=0;end<arr.length;end++){
        sum += arr[end];
        if(end>=k-1){
          maxSum = Math.max(sum,maxSum);
          sum = sum - arr[start];
          start++;
      }
 }
 return maxSum;
 }
 
/* 
2. Maximum consucutive One at most one flip is allowed
input: {1,1,0,0,1,1,1,1,1}
output: 6
*/
Answer: - 
public static void main (String[] args){
  int[] arr = {1,1,0,0,1,1,1,1,1}
 
  int result = getCount(arr);
  System.out.println(result);
  
  }
  public static void getCount(int[] arr){
      int maxConsecutiveOne = 0;
      int zeroCount = 0;
      int k=1;
      int start = 0;
      for(int end=0;end<arr.length;end++){
      if(arr[end]==0){
      zeroCount++;
      }
      while(zeroCount > k){
      if(arr[start] == 0){ 
      zeroCount--;
      }
      start++;
      }
      maxConsecutiveOne = Math.max(maxConsecutiveOne, end-start+1);
      }
  }
  
  /*
  3. Same question only change k flips
  {1,1,0,0,0,1,1,1,1,1}, k=2
  output 7
  */
  
  Answer:- 
  public static void main (String[] args){
  int[] arr = {1,1,0,0,1,1,1,1,1};
  int k = 2;
  
  int result = getCount(arr,k);
  System.out.println(result);
  }
  public static void getCount(int[] arr, k){
      int maxConsecutiveOne = 0;
      int zeroCount = 0;
      int start = 0;
      for(int end=0;end<arr.length;end++){
      if(arr[end]==0){
      zeroCount++;
      }
      while(zeroCount > k){
      if(arr[start] == 0){ 
      zeroCount--;
      }
      start++;
      }
      maxConsecutiveOne = Math.max(maxConsecutiveOne, end-start+1);
      }
      return maxConsecutiveOne;
  } 

/*
Minimum length subassay sum
Given an array of positive integer and positive no. k, find smallest contigous subarray whose sum is either greater or equal yo k

*/
 
